# creating a function
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
get_png <- function(dfs_img_adress) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
knitr::opts_chunk$set(echo = TRUE)
library(bbplot)
dfs_image <- get_png(dfs_img_adress)
dfs_img_wr <- image_write(dfs_img_resize, path = "dfs.png", format = "png", quality = 75)
library(magick)
dfs_img_adress <- file.path(paste0(getwd(), "/data_fintech_solutions_logo.png"))
dfs_img <- magick::image_read(dfs_img_adress)
dfs_img_resize <- magick::image_resize(dfs_image, "10000")
library(magick)
dfs_img_adress <- file.path(paste0(getwd(), "/data_fintech_solutions_logo.png"))
dfs_img <- magick::image_read(dfs_img_adress)
dfs_img_resize <- magick::image_resize(dfs_image, "10000")
dfs_img_resize <- magick::image_resize(dfs_img, "10000")
dfs_img_resize <- magick::image_resize(dfs_img, "10000")
dfs_img_wr <- image_write(dfs_img_resize, path = "dfs.png", format = "png", quality = 75)
living_plot +
annotation_custom("dfs.png", xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
?annotation_custom
library(ggplot2)
living_plot +
annotation_custom("dfs.png", xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
#Data for chart from gapminder package
line_df <- gapminder %>%
filter(country == "Brazil")
#This line of code installs the pacman page if you do not have it installed - if you do, it simply loads the package
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot')
#Data for chart from gapminder package
line_df <- gapminder %>%
filter(country == "Brazil")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank()) +
annotation_custom("dfs.png", xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
line
#Data for chart from gapminder package
line_df <- gapminder %>%
filter(country == "Brazil")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank()) +
annotation_custom("dfs.png", xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines")
line
#Data for chart from gapminder package
line_df <- gapminder %>%
filter(country == "Brazil")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank()) +
annotation_custom("dfs.png", xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
line
#Data for chart from gapminder package
line_df <- gapminder %>%
filter(country == "Brazil")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank())
line
dfs_img_adress <- file.path(paste0(getwd(), "/data_fintech_solutions_logo.png"))
dfs_image <- get_png(dfs_img_adress)
class(dfs_image)
living_plot +
annotation_custom(dfs_image, xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
# creating a function
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
dfs_image <- get_png(dfs_img_adress)
library(magick)
dfs_img_adress <- file.path(paste0(getwd(), "/data_fintech_solutions_logo.png"))
dfs_img <- magick::image_read(dfs_img_adress)
dfs_img_resize <- magick::image_resize(dfs_img, "10000")
dfs_img_wr <- image_write(dfs_img_resize, path = "dfs.png", format = "png", quality = 75)
living_plot <- finalise_plot(plot_name = line,
source = "Source: Gapminder",
save_filepath = "BBC_gapminder.png",
width_pixels = 640,
height_pixels = 450)
library(ggplot2)
living_plot +
annotation_custom(dfs_image, xmin = 12.5, xmax = 14.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
living_plot +
annotation_custom(dfs_image, xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
living_plot +
annotation_custom("dfs.png", xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
living_plot +
annotation_custom(dfs_img_wr, xmin = 6.5, xmax = 8.5, ymin = -5, ymax = -8.5) +
coord_cartesian(clip = "off") +
theme(plot.margin = unit(c(1, 1, 3, 1), "lines"))
living_plot +
image_composite("dfs.png", offset = "+22+1826")
living_plot +
image_composite(dfs_img_resize, offset = "+22+1826")
plot_height <- magick::image_info(living_plot)$height
living_plot_magick <- image_write(living_plot, path = "plot.png", format = "png", quality = 75)
living_plot_magick <- image_read("BBC_gapminder.png")
plot_height <- magick::image_info(living_plot_magick)$height
plot_width <- magick::image_info(living_plot_magick)$width
logo_width <- magick::image_info(dfs_img)$width
logo_height <- magick::image_info(dfs_img)$height
plot_height - logo_height - plot_height * 0.01
# get number of pixels to be 1% from the left of the plot
plot_width * 0.01
# get number of pixels to be 1% from the bottom of the plot
# while accounting for the logo height
plot_height - logo_height - plot_height * 0.01
# get number of pixels to be 1% from the left of the plot
plot_width * 0.01
living_plot +
image_composite(logo, offset = "+26+776")
living_plot +
image_composite("data_fintech_solutions_logo.png", offset = "+26+776")
living_plot +
image_composite(dfs_img, offset = "+26+776")
living_plot_magick +
image_composite(dfs_img, offset = "+26+776")
img = readPNG(system.file("img", "data_fintech_solutions_logo.png", package="png"))
library(ggplot2)
library(png)
library(gridExtra)
library(grid)
img = readPNG(system.file("img", "data_fintech_solutions_logo.png", package="png"))
install.packages(c("png", "gridExtra", "grid"))
system.file("img")
?system.file
img = readPNG("data_fintech_solutions_logo.png")
living_plot = living_plot +
annotation_custom(rasterGrob(img),
xmin=0.95*min(mtcars$mpg)-1, xmax=0.95*min(mtcars$mpg)+1,
ymin=0.62*min(mtcars$wt)-0.5, ymax=0.62*min(mtcars$wt)+0.5) +
annotation_custom(textGrob("Footer goes here", gp=gpar(col="blue")),
xmin=max(mtcars$mpg), xmax=max(mtcars$mpg),
ymin=0.6*min(mtcars$wt), ymax=0.6*min(mtcars$wt)) +
theme(plot.margin=margin(5,5,30,5))
img = readPNG(system.file("img", "Rlogo.png", package="png"))
living_plot = living_plot +
annotation_custom(rasterGrob(img),
xmin=0.95*min(mtcars$mpg)-1, xmax=0.95*min(mtcars$mpg)+1,
ymin=0.62*min(mtcars$wt)-0.5, ymax=0.62*min(mtcars$wt)+0.5) +
annotation_custom(textGrob("Footer goes here", gp=gpar(col="blue")),
xmin=max(mtcars$mpg), xmax=max(mtcars$mpg),
ymin=0.6*min(mtcars$wt), ymax=0.6*min(mtcars$wt)) +
theme(plot.margin=margin(5,5,30,5))
living_plot +
annotation_custom(rasterGrob(img))
living_plot +
annotation_custom(rasterGrob("dfs.png"))
living_plot +
annotation_custom(rasterGrob("data_fintech_solutions_logo.png"))
img = readPNG("data_fintech_solutions_logo.png")
living_plot +
annotation_custom(rasterGrob(img))
library(ggplot2)
library(magick)
library(here) # For making the script run without a wd
install.packages("here")
# Call back the plot
plot <- image_read(paste0(here("/"), "BBC_gapminder.png"))
library(here) # For making the script run without a wd
# Call back the plot
plot <- image_read(paste0(here("/"), "BBC_gapminder.png"))
# Call back the plot
plot <- image_read(paste0(here("/"), "BBC_gapminder.png"))
# Call back the plot
plot <- image_read(paste0(here("."), "BBC_gapminder.png"))
# Call back the plot
plot <- image_read(paste0(getwd(), "/BBC_gapminder.png"))
# And bring in a logo
logo_raw <- image_read(paste0(getwd(), "/data_fintech_solutions_logo.png"))
logo <- logo_raw %>%
image_scale("100") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "600x10") %>%
image_annotate("Powered By R", color = "white", size = 30,
location = "+10+50", gravity = "northeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- logo_raw %>%
image_scale("300") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "600x10") %>%
image_annotate("Powered By R", color = "white", size = 30,
location = "+10+50", gravity = "northeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "600x10") %>%
image_annotate("Powered By R", color = "white", size = 30,
location = "+10+50", gravity = "northeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "400x10") %>%
image_annotate("Powered By R", color = "white", size = 40,
location = "+10+50", gravity = "southeast")
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "400x10") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "300x10") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "700x10") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = FALSE) %>%
image_border("grey", "500x10") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "500x10") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "500x30") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "500x5") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "500x3") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "500x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
logo <- logo_raw %>%
image_scale("500") %>%
image_background(flatten = TRUE, image = "data_fintech_solutions_fundo.png") %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
logo <- logo_raw %>%
image_scale("500") %>%
image_background(flatten = TRUE, image = image_read("data_fintech_solutions_fundo.png")) %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- logo_raw %>%
image_scale("500") %>%
image_background(image = image_read("data_fintech_solutions_fundo.png"), flatten = TRUE) %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
?image_background
logo <- logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
final_plot
logo <- function(){
# And bring in a logo
logo_raw <- image_read(paste0(getwd(), "/data_fintech_solutions_logo.png"))
logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
}
living_plot <- finalise_plot(plot_name = line,
source = "Source: Gapminder",
save_filepath = "BBC_gapminder.png",
width_pixels = 640,
height_pixels = 450) %>%
logo()
logo()
final_plot <- image_append(image_scale(c(plot, logo()), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
final_plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
logo()
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
logo() +
labs(title="Living longer",
subtitle = "Life expectancy in China 1952-2007")
line +
logo()
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank()) +
image_write(past0(getwd(), "/"), format = "png")
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank()) +
image_write(paste0(getwd(), "/"), format = "png")
#Data for chart from gapminder package
line_df <- gapminder %>%
filter(country == "Brazil")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Brazil 1952-2007") +
theme(panel.grid.major.x = element_line(color="#cbcbcb"),
panel.grid.major.y=element_blank())
library(ggplot2)
library(magick)
library(here) # For making the script run without a wd
library(magrittr) # For piping the logo
# Make a simple plot and save it
living_plot <- finalise_plot(plot_name = line,
source = "Source: Gapminder",
save_filepath = "BBC_gapminder.png",
width_pixels = 640,
height_pixels = 450)
# Call back the plot
plot <- image_read(paste0(getwd(), "/BBC_gapminder.png"))
# Scale down the logo and give it a border and annotation
# This is the cool part because you can do a lot to the image/logo before adding it
logo <- function(){
# And bring in a logo
logo_raw <- image_read(paste0(getwd(), "/data_fintech_solutions_logo.png"))
logo_raw %>%
image_scale("500") %>%
image_background("grey", flatten = TRUE) %>%
image_border("grey", "400x1") %>%
image_annotate("Powered By R", color = "white", size = 35,
location = "+10+50", gravity = "southeast")
}
# Stack them on top of each other
final_plot <- image_append(image_scale(c(plot, logo()), "500"), stack = TRUE)
# And overwrite the plot without a logo
image_write(final_plot, paste0(getwd(), last_plot()$labels$title, ".png"))
install.packages("bizdays")
setwd("~/Private/Salerno/Pessoal/Cursos/bbc")
